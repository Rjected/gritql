[package]
name = "marzano-cli"
version = "0.1.1"
edition = "2021"
authors = ["Grit Developers <support@grit.io>"]

[lints]
rust.unused_crate_dependencies = "warn"

[lib]
path = "src/lib.rs"

[dependencies]
anyhow = { workspace = true }
clap = { workspace = true, features = ["derive"] }
indicatif = { workspace = true }
ignore = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
tokio = { workspace = true, features = ["full"] }
chrono = { workspace = true, features = ["serde"] }
reqwest = { workspace = true, features = ["json"] }
lazy_static = { workspace = true }
indicatif-log-bridge = { workspace = true }
colored = { workspace = true }
log = { workspace = true }
env_logger = { workspace = true }
git2 = { workspace = true }
regex = { workspace = true }
openssl = { workspace = true, features = ["vendored"] }
marzano-core = { path = "../core", features = [
  "non_wasm",
], default-features = false }
marzano-gritmodule = { path = "../gritmodule" }
marzano-language = { path = "../language", features = ["finder"] }
marzano-lsp = { path = "../lsp" }
marzano-util = { path = "../util", features = ["finder"] }
marzano-auth = { path = "../auth" }
marzano_messenger = { path = "../marzano_messenger" }
cli_server = { workspace = true, optional = true }
ai_builtins = { workspace = true, optional = true }
grit_cache = { path = "../gritcache" }
tempfile = { workspace = true }
similar = { workspace = true }
dialoguer = { workspace = true }
console = { workspace = true }
futures = { workspace = true }
rayon = { workspace = true }
dashmap = { workspace = true }
clap-markdown = { workspace = true, optional = true }
flate2 = { workspace = true, features = ["rust_backend"] }
opentelemetry-otlp = { workspace = true, features = ["http-proto", "reqwest-client"], optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio"], optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
tracing = { workspace = true, features = [] }

[dev-dependencies]
trim-margin = { workspace = true }
buildkite-test-collector = { workspace = true }
similar = { workspace = true }
reqwest = { workspace = true, features = ["blocking", "json"] }
marzano-test-utils = { path = "../test_utils" }


[features]
default = [
  "external_functions",
  "updater",
  "workflows_v2",
  # "server",
  # "remote_redis",
  # "embeddings",
  # "grit_timing",
  # "grit_tracing",
]
workflows_v2 = []
bundled_workflows = []
remote_redis = []
remote_pubsub = []
server = ["workflows_v2", "external_functions", "updater", "remote_redis", "remote_pubsub", "ai_builtins", "dep:cli_server"]
updater = []
grit_tracing = [
  "dep:opentelemetry-otlp",
  "dep:opentelemetry",
  "dep:opentelemetry_sdk",
  "dep:tracing-opentelemetry",
  "marzano-core/grit_tracing",
]
external_functions = ["marzano-core/external_functions"]
ai_builtins = ["dep:ai_builtins"]
embeddings = ["marzano-core/embeddings", "ai_builtins/embeddings"]
docgen = ["dep:clap-markdown"]
grit_alpha = [
  "external_functions",
  "updater",
  "docgen",
  # "grit_timing",
  # "grit_tracing",
]
grit_beta = [
  "external_functions",
  "updater",
  "ai_builtins"
  # "grit_timing",
]
grit_timing = []
